Folder listing for: C:\Users\Graphics2\Downloads\Internet Department Tracking\ 
Generated on: 01-07-2025 19:25:37.01 
 
===== FOLDER TREE ===== 
\
    [IGNORED] Backup\
    Folder Structure & Cotnent In One Text File.bat
    index_html.html
    script_js.js
    styles_css.css
===== END OF TREE ===== 
 
===== FILE CONTENTS ===== 
 
================================================= 
FILE: Folder Structure & Cotnent In One Text File.bat 
================================================= 
 
@echo off
REM ======= CONFIGURATION ========
set "TITLE_FILE_NAME=Folder Structure & Content In One Text File.txt"
set "TEXT_EXTENSIONS=.txt .csv .log .html .htm .xml .bat .ini .md .json .js .css .py .php .java .cpp .cs .sql"

REM ======= IGNORE SETTINGS - ADD YOUR FOLDERS AND FILES HERE =======
REM Add folder names you want to ignore (separate with spaces)
set "IGNORE_FOLDERS=Backup .git testing temp build dist"

REM Add file names you want to ignore (separate with spaces) 
set "IGNORE_FILES==123 package-lock config .gitignore"

REM ======= END CONFIGURATION =====

REM Get current folder path
set "CURRENT_DIR=%~dp0"
set "OUTPUT_FILE=%CURRENT_DIR%%TITLE_FILE_NAME%"

REM Delete old output file if exists
if exist "%OUTPUT_FILE%" del "%OUTPUT_FILE%"

setlocal EnableDelayedExpansion

REM Write the TITLE at the top of the file
echo Folder listing for: %CURRENT_DIR% > "%OUTPUT_FILE%"
echo Generated on: %DATE% %TIME% >> "%OUTPUT_FILE%"
echo. >> "%OUTPUT_FILE%"

REM Write the folder + file hierarchy (filtered)
echo ===== FOLDER TREE ===== >> "%OUTPUT_FILE%"
call :ShowTree "%CURRENT_DIR%" 0 >> "%OUTPUT_FILE%"
echo ===== END OF TREE ===== >> "%OUTPUT_FILE%"
echo. >> "%OUTPUT_FILE%"

REM Process file contents
echo ===== FILE CONTENTS ===== >> "%OUTPUT_FILE%"
call :ProcessFolder "%CURRENT_DIR%" ""
echo ===== END OF FILE CONTENTS ===== >> "%OUTPUT_FILE%"

endlocal

echo.
echo ===================================
echo Done! Full dump created: %OUTPUT_FILE%
echo ===================================
pause
goto :eof

REM ======= FUNCTION TO SHOW FILTERED TREE =======
:ShowTree
setlocal EnableDelayedExpansion
set "FOLDER_PATH=%~1"
set "LEVEL=%~2"
set "INDENT="

REM Create indentation
for /L %%i in (1,1,%LEVEL%) do set "INDENT=!INDENT!    "

REM Show current folder name
for %%F in ("%FOLDER_PATH%") do echo !INDENT!%%~nxF\

REM Process subfolders
for /D %%D in ("%FOLDER_PATH%\*") do (
    set "SKIP_FOLDER="
    set "FOLDER_NAME=%%~nxD"
    
    REM Check if folder should be ignored
    for %%I in (%IGNORE_FOLDERS%) do (
        if /I "!FOLDER_NAME!"=="%%I" set "SKIP_FOLDER=1"
    )
    
    if not defined SKIP_FOLDER (
        set /A "NEXT_LEVEL=%LEVEL%+1"
        call :ShowTree "%%D" !NEXT_LEVEL!
    ) else (
        echo !INDENT!    [IGNORED] !FOLDER_NAME!\
    )
)

REM Show files in current folder
for %%F in ("%FOLDER_PATH%\*.*") do (
    if not "%%~nxF"=="%TITLE_FILE_NAME%" if not "%%~nxF"=="%%~nx0" (
        set "SKIP_FILE="
        set "FILE_NAME=%%~nF"
        set "FILE_NAME_EXT=%%~nxF"
        
        REM Check if file should be ignored
        for %%I in (%IGNORE_FILES%) do (
            if /I "!FILE_NAME!"=="%%I" set "SKIP_FILE=1"
            if /I "!FILE_NAME_EXT!"=="%%I" set "SKIP_FILE=1"
        )
        
        if not defined SKIP_FILE (
            echo !INDENT!    %%~nxF
        ) else (
            echo !INDENT!    [IGNORED] %%~nxF
        )
    )
)

endlocal
goto :eof

REM ======= FUNCTION TO PROCESS FOLDERS RECURSIVELY =======
:ProcessFolder
setlocal EnableDelayedExpansion
set "FOLDER_PATH=%~1"
set "REL_PATH=%~2"

REM Process files in current folder
for %%F in ("%FOLDER_PATH%\*.*") do (
    if not "%%~nxF"=="%TITLE_FILE_NAME%" if not "%%~nxF"=="%%~nx0" (
        set "SKIP_FILE="
        set "FILE_NAME=%%~nF"
        set "FILE_NAME_EXT=%%~nxF"
        set "FULL_REL_PATH=!REL_PATH!%%~nxF"
        
        REM Check if file should be ignored
        for %%I in (%IGNORE_FILES%) do (
            if /I "!FILE_NAME!"=="%%I" set "SKIP_FILE=1"
            if /I "!FILE_NAME_EXT!"=="%%I" set "SKIP_FILE=1"
        )
        
        if not defined SKIP_FILE (
            REM Check if it is a text file
            set "IS_TEXT_FILE="
            for %%E in (%TEXT_EXTENSIONS%) do (
                if /I "%%~xF"=="%%E" set "IS_TEXT_FILE=1"
            )
            
            echo. >> "%OUTPUT_FILE%"
            echo ================================================= >> "%OUTPUT_FILE%"
            echo FILE: !FULL_REL_PATH! >> "%OUTPUT_FILE%"
            echo ================================================= >> "%OUTPUT_FILE%"
            echo. >> "%OUTPUT_FILE%"
            
            if "!IS_TEXT_FILE!"=="1" (
                if exist "%%F" (
                    for %%S in ("%%F") do if %%~zS GTR 0 (
                        type "%%F" >> "%OUTPUT_FILE%" 2>nul
                        if errorlevel 1 (
                            echo [Error reading file] >> "%OUTPUT_FILE%"
                        )
                    ) else (
                        echo [Empty file] >> "%OUTPUT_FILE%"
                    )
                ) else (
                    echo [File not accessible] >> "%OUTPUT_FILE%"
                )
            ) else (
                echo [Binary file - skipped] >> "%OUTPUT_FILE%"
            )
            
            echo. >> "%OUTPUT_FILE%"
            echo ================================================= >> "%OUTPUT_FILE%"
            echo END OF FILE: !FULL_REL_PATH! >> "%OUTPUT_FILE%"
            echo ================================================= >> "%OUTPUT_FILE%"
            
            echo Processed: !FULL_REL_PATH!
        )
    )
)

REM Process subfolders recursively
for /D %%D in ("%FOLDER_PATH%\*") do (
    set "SKIP_FOLDER="
    set "FOLDER_NAME=%%~nxD"
    set "SUB_REL_PATH=!REL_PATH!%%~nxD\"
    
    REM Check if folder should be ignored
    for %%I in (%IGNORE_FOLDERS%) do (
        if /I "!FOLDER_NAME!"=="%%I" set "SKIP_FOLDER=1"
    )
    
    if not defined SKIP_FOLDER (
        call :ProcessFolder "%%D" "!SUB_REL_PATH!"
    ) else (
        echo Skipped folder: !SUB_REL_PATH!
    )
)

endlocal
goto :eof 
================================================= 
END OF FILE: Folder Structure & Cotnent In One Text File.bat 
================================================= 
 
================================================= 
FILE: index_html.html 
================================================= 
 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Internet Department Tracking Software</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="./styles_css.css">
</head>
<body>
    <!-- Header -->
    <header>
        <div class="menu-toggle">
            <span></span>
            <span></span>
            <span></span>
        </div>
        <div class="logo">Internet Department Tracking</div>
    </header>

    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <div class="sidebar-controls">
                <i class="fas fa-thumbtack" title="Pin sidebar"></i>
                <i class="fas fa-times" title="Close sidebar"></i>
            </div>
        </div>
        <div class="sidebar-menu">
            <div class="menu-item active" data-page="home">
                <i class="fas fa-home"></i>
                <span>Dashboard</span>
            </div>
            <div class="menu-item" data-page="live-tv">
                <i class="fas fa-tv"></i>
                <span>Live TV</span>
            </div>
            <div class="menu-item" data-page="connections">
                <i class="fas fa-plug"></i>
                <span>Connections</span>
            </div>
            <div class="menu-item">
                <i class="fas fa-broadcast-tower"></i>
                <span>Broadcasts</span>
            </div>
            <div class="menu-item">
                <i class="fas fa-calendar-alt"></i>
                <span>Events Schedule</span>
            </div>
            <div class="menu-item">
                <i class="fas fa-chart-line"></i>
                <span>Analytics</span>
            </div>
            <div class="menu-item">
                <i class="fas fa-cog"></i>
                <span>Settings</span>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Home Page -->
        <div class="page active" id="home">
            <div class="home-content">
                <div class="welcome-text">Welcome to Internet Department Tracking</div>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-value">24</div>
                        <div class="stat-label">Live Channels</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">1.2M</div>
                        <div class="stat-label">Monthly Views</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">98%</div>
                        <div class="stat-label">Uptime</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">36</div>
                        <div class="stat-label">Upcoming Events</div>
                    </div>
                </div>
                <p class="home-description">
                    The Internet Department Tracking Software provides comprehensive monitoring and management of all digital broadcasting activities. 
                    Access live streams, schedule events, and analyze performance metrics from a single dashboard.
                </p>
            </div>
        </div>

        <!-- Live TV Page -->
        <div class="page" id="live-tv">
            <div class="page-header">
                <h1 class="page-title">Live TV Channels</h1>
                <div class="refresh-btn">
                    <i class="fas fa-sync-alt"></i> Refresh
                </div>
            </div>
            <div class="video-grid">
                <div class="video-container">
                    <div class="video-frame">
                        <div class="loader">
                            <div class="loader-circle"></div>
                        </div>
                    </div>
                    <div class="video-title">
                        <i class="fas fa-circle"></i>
                        <span class="video-name">Loading channel...</span>
                    </div>
                </div>
                <div class="video-container">
                    <div class="video-frame">
                        <div class="loader">
                            <div class="loader-circle"></div>
                        </div>
                    </div>
                    <div class="video-title">
                        <i class="fas fa-circle"></i>
                        <span class="video-name">Loading channel...</span>
                    </div>
                </div>
                <div class="video-container">
                    <div class="video-frame">
                        <div class="loader">
                            <div class="loader-circle"></div>
                        </div>
                    </div>
                    <div class="video-title">
                        <i class="fas fa-circle"></i>
                        <span class="video-name">Loading channel...</span>
                    </div>
                </div>
                <div class="video-container">
                    <div class="video-frame">
                        <div class="loader">
                            <div class="loader-circle"></div>
                        </div>
                    </div>
                    <div class="video-title">
                        <i class="fas fa-circle"></i>
                        <span class="video-name">Loading channel...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Connections Page -->
        <div class="page" id="connections">
            <div class="page-header">
                <h1 class="page-title">Social Media Connections</h1>
            </div>
            <div class="connections-content">
                <div class="social-platform">
                    <div class="platform-header">
                        <i class="fab fa-youtube"></i>
                        <h3>YouTube Channels</h3>
                    </div>
                    <div class="platform-description">
                        Add YouTube channel IDs to automatically fetch live streams
                    </div>
                    <div class="account-list" id="youtube-accounts">
                        <!-- Accounts will be added here dynamically -->
                    </div>
                    <div class="add-account">
                        <input type="text" id="youtube-input" placeholder="Enter YouTube channel ID (e.g. UC6VkhPuCCwR_kG0GExjoozg)">
                        <button id="add-youtube"><i class="fas fa-plus"></i> Add Channel</button>
                    </div>
                </div>
                
                <div class="social-platform">
                    <div class="platform-header">
                        <i class="fab fa-instagram"></i>
                        <h3>Instagram Accounts</h3>
                    </div>
                    <div class="account-list" id="instagram-accounts">
                        <div class="account-item">
                            <input type="text" placeholder="Enter Instagram username" value="swaminarayan_official">
                            <button class="remove-btn"><i class="fas fa-times"></i></button>
                        </div>
                    </div>
                    <div class="add-account">
                        <input type="text" id="instagram-input" placeholder="Enter Instagram username">
                        <button id="add-instagram"><i class="fas fa-plus"></i> Add Account</button>
                    </div>
                </div>
                
                <div class="social-platform">
                    <div class="platform-header">
                        <i class="fab fa-facebook"></i>
                        <h3>Facebook Pages</h3>
                    </div>
                    <div class="account-list" id="facebook-accounts">
                        <div class="account-item">
                            <input type="text" placeholder="Enter Facebook page ID" value="BAPSSwaminarayanSanstha">
                            <button class="remove-btn"><i class="fas fa-times"></i></button>
                        </div>
                    </div>
                    <div class="add-account">
                        <input type="text" id="facebook-input" placeholder="Enter Facebook page ID">
                        <button id="add-facebook"><i class="fas fa-plus"></i> Add Page</button>
                    </div>
                </div>
                
                <div class="social-platform">
                    <div class="platform-header">
                        <i class="fab fa-twitter"></i>
                        <h3>Twitter Accounts</h3>
                    </div>
                    <div class="account-list" id="twitter-accounts">
                        <div class="account-item">
                            <input type="text" placeholder="Enter Twitter handle" value="BAPS">
                            <button class="remove-btn"><i class="fas fa-times"></i></button>
                        </div>
                    </div>
                    <div class="add-account">
                        <input type="text" id="twitter-input" placeholder="Enter Twitter handle">
                        <button id="add-twitter"><i class="fas fa-plus"></i> Add Account</button>
                    </div>
                </div>
                
                <button class="save-btn" id="save-connections">Save Connections</button>
            </div>
        </div>
    </main>

    <script src="./script_js.js"></script>
</body>
</html> 
================================================= 
END OF FILE: index_html.html 
================================================= 
 
================================================= 
FILE: script_js.js 
================================================= 
 
// DOM Elements
const menuToggle = document.querySelector('.menu-toggle');
const sidebar = document.querySelector('.sidebar');
const pinBtn = document.querySelector('.fa-thumbtack');
const closeBtn = document.querySelector('.fa-times');
const menuItems = document.querySelectorAll('.menu-item');
const pages = document.querySelectorAll('.page');
const main = document.querySelector('main');
const refreshBtn = document.querySelector('.refresh-btn');
const saveBtn = document.getElementById('save-connections');

// YouTube channel data
let youtubeChannels = [];
const youtubeAccounts = document.getElementById('youtube-accounts');
const youtubeInput = document.getElementById('youtube-input');
const addYoutubeBtn = document.getElementById('add-youtube');

// Pin state
let isPinned = false;

// Initialize the app
document.addEventListener('DOMContentLoaded', () => {
    // Load saved connections
    loadConnections();
    
    // Set up event listeners
    setupEventListeners();
    
    // Load live streams
    loadLiveStreams();
});

// Set up event listeners
function setupEventListeners() {
    // Toggle sidebar
    menuToggle.addEventListener('click', toggleSidebar);
    
    // Pin sidebar functionality
    pinBtn.addEventListener('click', togglePinSidebar);
    
    // Close sidebar
    closeBtn.addEventListener('click', closeSidebar);
    
    // Page navigation
    menuItems.forEach(item => {
        item.addEventListener('click', navigateToPage);
    });
    
    // Add YouTube channel
    addYoutubeBtn.addEventListener('click', addYoutubeChannel);
    
    // Save connections
    saveBtn.addEventListener('click', saveConnections);
    
    // Refresh streams
    refreshBtn.addEventListener('click', loadLiveStreams);
    
    // Close sidebar when clicking outside
    document.addEventListener('click', closeSidebarOnOutsideClick);
}

// Toggle sidebar
function toggleSidebar() {
    menuToggle.classList.toggle('active');
    sidebar.classList.toggle('active');
}

// Toggle pin sidebar
function togglePinSidebar() {
    isPinned = !isPinned;
    pinBtn.classList.toggle('active', isPinned);
    pinBtn.style.color = isPinned ? '#3498db' : '';
    pinBtn.style.transform = isPinned ? 'rotate(45deg)' : 'rotate(0)';
    
    // Adjust main content when sidebar is pinned
    if (isPinned) {
        main.style.paddingLeft = `calc(${sidebar.offsetWidth}px + 25px)`;
    } else {
        main.style.paddingLeft = '25px';
    }
}

// Close sidebar
function closeSidebar() {
    menuToggle.classList.remove('active');
    sidebar.classList.remove('active');
}

// Navigate to page
function navigateToPage() {
    // Remove active class from all menu items
    menuItems.forEach(i => i.classList.remove('active'));
    
    // Add active class to clicked item
    this.classList.add('active');
    
    // Get page id
    const pageId = this.getAttribute('data-page');
    
    // Hide all pages
    pages.forEach(page => page.classList.remove('active'));
    
    // Show selected page
    document.getElementById(pageId).classList.add('active');
    
    // Load streams if on Live TV page
    if (pageId === 'live-tv') {
        loadLiveStreams();
    }
}

// Add YouTube channel
function addYoutubeChannel() {
    const channelId = youtubeInput.value.trim();
    
    if (channelId) {
        // Check if channel already exists
        if (!youtubeChannels.includes(channelId)) {
            youtubeChannels.push(channelId);
            renderYoutubeAccounts();
            youtubeInput.value = '';
        }
    }
}

// Render YouTube accounts
function renderYoutubeAccounts() {
    youtubeAccounts.innerHTML = '';
    
    youtubeChannels.forEach(channel => {
        const accountItem = document.createElement('div');
        accountItem.className = 'account-item';
        accountItem.innerHTML = `
            <input type="text" value="${channel}" readonly>
            <button class="remove-btn" data-channel="${channel}"><i class="fas fa-times"></i></button>
        `;
        youtubeAccounts.appendChild(accountItem);
        
        // Add event listener to remove button
        accountItem.querySelector('.remove-btn').addEventListener('click', function() {
            const channelToRemove = this.getAttribute('data-channel');
            youtubeChannels = youtubeChannels.filter(c => c !== channelToRemove);
            renderYoutubeAccounts();
        });
    });
}

// Save connections
function saveConnections() {
    // Save to localStorage
    localStorage.setItem('youtubeChannels', JSON.stringify(youtubeChannels));
    
    // Show success message
    saveBtn.innerHTML = '<i class="fas fa-check"></i> Saved Successfully!';
    saveBtn.style.background = 'var(--success)';
    
    setTimeout(() => {
        saveBtn.innerHTML = 'Save Connections';
        saveBtn.style.background = 'var(--accent)';
    }, 2000);
    
    // Reload live streams
    loadLiveStreams();
}

// Load connections
function loadConnections() {
    const savedChannels = localStorage.getItem('youtubeChannels');
    if (savedChannels) {
        youtubeChannels = JSON.parse(savedChannels);
        renderYoutubeAccounts();
    }
}

// Load live streams
function loadLiveStreams() {
    const videoContainers = document.querySelectorAll('.video-container');
    const videoNames = document.querySelectorAll('.video-name');
    
    // Show loading state
    videoContainers.forEach(container => {
        container.querySelector('.video-frame').innerHTML = `
            <div class="loader">
                <div class="loader-circle"></div>
            </div>
        `;
    });
    
    videoNames.forEach(name => {
        name.textContent = 'Loading channel...';
    });
    
    // Simulate API call to fetch live streams
    setTimeout(() => {
        // If we have saved channels, use them
        if (youtubeChannels.length > 0) {
            youtubeChannels.forEach((channelId, index) => {
                if (index < videoContainers.length) {
                    const container = videoContainers[index];
                    const nameElement = videoNames[index];
                    
                    // Simulate different channel names
                    const channelNames = [
                        "Swaminarayan Bhagwan Live",
                        "BAPS Swaminarayan Live",
                        "Morning Aarti Live",
                        "Evening Discourse Live"
                    ];
                    
                    container.querySelector('.video-frame').innerHTML = `
                        <iframe src="https://www.youtube.com/embed/live_stream?channel=${channelId}&autoplay=1&mute=1" 
                                allow="autoplay; encrypted-media" allowfullscreen></iframe>
                    `;
                    nameElement.textContent = channelNames[index] || `Channel ${index + 1}`;
                }
            });
        } else {
            // Use default channels
            const defaultChannels = [
                "UC6VkhPuCCwR_kG0GExjoozg", // Swaminarayan Bhagwan
                "UCq8CX_FsV7v8wZcBd7sxjIg"  // BAPS Swaminarayan
            ];
            
            defaultChannels.forEach((channelId, index) => {
                if (index < videoContainers.length) {
                    const container = videoContainers[index];
                    const nameElement = videoNames[index];
                    
                    const channelNames = [
                        "Swaminarayan Bhagwan Live",
                        "BAPS Swaminarayan Live"
                    ];
                    
                    container.querySelector('.video-frame').innerHTML = `
                        <iframe src="https://www.youtube.com/embed/live_stream?channel=${channelId}&autoplay=1&mute=1" 
                                allow="autoplay; encrypted-media" allowfullscreen></iframe>
                    `;
                    nameElement.textContent = channelNames[index] || `Channel ${index + 1}`;
                }
            });
        }
    }, 1500);
}

// Close sidebar when clicking outside
function closeSidebarOnOutsideClick(event) {
    const isClickInsideSidebar = sidebar.contains(event.target);
    const isClickOnMenuToggle = menuToggle.contains(event.target);
    
    if (!isClickInsideSidebar && !isClickOnMenuToggle && !isPinned) {
        menuToggle.classList.remove('active');
        sidebar.classList.remove('active');
    }
} 
================================================= 
END OF FILE: script_js.js 
================================================= 
 
================================================= 
FILE: styles_css.css 
================================================= 
 
:root {
    --primary: #1e2a38;
    --secondary: #2c3e50;
    --accent: #3498db;
    --accent-dark: #2980b9;
    --light: #ecf0f1;
    --dark: #0d1b2a;
    --success: #27ae60;
    --warning: #f39c12;
    --danger: #e74c3c;
    --sidebar-width: 280px;
    --header-height: 70px;
    --transition-speed: 0.3s;
    --border-radius: 8px;
    --card-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background: linear-gradient(135deg, var(--dark), #1a2a3a);
    color: var(--light);
    overflow-x: hidden;
    min-height: 100vh;
}

/* Header Styles */
header {
    background-color: rgba(26, 37, 46, 0.95);
    height: var(--header-height);
    display: flex;
    align-items: center;
    padding: 0 25px;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.menu-toggle {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    cursor: pointer;
    margin-right: 20px;
    transition: all var(--transition-speed);
}

.menu-toggle span {
    height: 3px;
    background: var(--light);
    border-radius: 3px;
    transition: all var(--transition-speed);
}

.menu-toggle.active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
}

.menu-toggle.active span:nth-child(2) {
    opacity: 0;
}

.menu-toggle.active span:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
}

.logo {
    font-size: 1.8rem;
    font-weight: 700;
    letter-spacing: 1px;
    background: linear-gradient(45deg, var(--accent), #9b59b6);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    flex-grow: 1;
    font-family: 'Arial Rounded MT Bold', 'Helvetica Rounded', Arial, sans-serif;
}

/* Sidebar Styles */
.sidebar {
    position: fixed;
    top: var(--header-height);
    left: -100%;
    width: var(--sidebar-width);
    height: calc(100vh - var(--header-height));
    background: rgba(26, 37, 46, 0.97);
    backdrop-filter: blur(10px);
    z-index: 900;
    transition: all var(--transition-speed);
    overflow-y: auto;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 5px 0 25px rgba(0, 0, 0, 0.4);
}

.sidebar.active {
    left: 0;
}

.sidebar-header {
    display: flex;
    justify-content: flex-end;
    padding: 15px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.sidebar-controls {
    display: flex;
    gap: 15px;
}

.sidebar-controls i {
    font-size: 1.2rem;
    cursor: pointer;
    transition: all 0.2s;
    padding: 8px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
}

.sidebar-controls i:hover {
    background: var(--accent);
    transform: scale(1.1);
}

.sidebar-menu {
    padding: 20px 0;
}

.menu-item {
    padding: 15px 25px;
    display: flex;
    align-items: center;
    gap: 15px;
    cursor: pointer;
    transition: all 0.2s;
    border-left: 3px solid transparent;
}

.menu-item:hover, .menu-item.active {
    background: rgba(52, 152, 219, 0.15);
    border-left: 3px solid var(--accent);
}

.menu-item i {
    font-size: 1.2rem;
    width: 24px;
    text-align: center;
    color: var(--accent);
}

.menu-item span {
    font-size: 1.1rem;
    font-weight: 500;
}

/* Main Content Styles */
main {
    padding: calc(var(--header-height) + 25px) 25px 25px;
    transition: all var(--transition-speed);
    min-height: calc(100vh - var(--header-height));
}

.page {
    display: none;
    animation: fadeIn 0.5s ease;
}

.page.active {
    display: block;
}

.page-header {
    margin-bottom: 30px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.page-title {
    font-size: 2.2rem;
    font-weight: 700;
    background: linear-gradient(45deg, var(--accent), #9b59b6);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-family: 'Arial Rounded MT Bold', 'Helvetica Rounded', Arial, sans-serif;
}

.refresh-btn {
    background: rgba(52, 152, 219, 0.2);
    color: var(--accent);
    padding: 10px 20px;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.3s;
    display: flex;
    align-items: center;
    gap: 10px;
    font-weight: 500;
}

.refresh-btn:hover {
    background: rgba(52, 152, 219, 0.3);
}

/* Live TV Grid */
.video-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 25px;
    height: calc(100vh - var(--header-height) - 120px);
}

.video-container {
    position: relative;
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: var(--card-shadow);
    transition: all 0.3s ease;
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    flex-direction: column;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.video-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);
}

.video-frame {
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #1a2a3a, #0d1b2a);
}

.video-frame iframe {
    width: 100%;
    height: 100%;
    border: none;
}

.video-title {
    padding: 15px 20px;
    background: rgba(26, 37, 46, 0.8);
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1.1rem;
}

.video-title i {
    color: var(--danger);
    animation: pulse 1.5s infinite;
}

/* Home Page */
.home-content {
    max-width: 900px;
    margin: 0 auto;
    padding: 40px;
    background: rgba(26, 37, 46, 0.7);
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.welcome-text {
    font-size: 2rem;
    margin-bottom: 30px;
    text-align: center;
    background: linear-gradient(45deg, var(--accent), #9b59b6);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-weight: 700;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 25px;
    margin-bottom: 40px;
}

.stat-card {
    background: rgba(52, 152, 219, 0.15);
    border-radius: var(--border-radius);
    padding: 25px 20px;
    text-align: center;
    transition: all 0.3s;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.stat-card:hover {
    transform: translateY(-5px);
    background: rgba(52, 152, 219, 0.25);
    box-shadow: var(--card-shadow);
}

.stat-value {
    font-size: 2.8rem;
    font-weight: 700;
    margin-bottom: 5px;
    color: var(--accent);
}

.stat-label {
    font-size: 1.1rem;
    color: rgba(255, 255, 255, 0.8);
}

.home-description {
    text-align: center;
    line-height: 1.7;
    color: rgba(255, 255, 255, 0.8);
    font-size: 1.1rem;
}

/* Connections Page */
.connections-content {
    max-width: 800px;
    margin: 0 auto;
    background: rgba(26, 37, 46, 0.7);
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    padding: 30px;
}

.social-platform {
    margin-bottom: 30px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--border-radius);
    padding: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.platform-header {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 15px;
}

.platform-header i {
    font-size: 1.8rem;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background: rgba(52, 152, 219, 0.2);
    color: var(--accent);
}

.platform-header h3 {
    font-size: 1.5rem;
    font-weight: 600;
}

.platform-description {
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 15px;
    font-size: 0.95rem;
}

.account-list {
    margin-bottom: 15px;
}

.account-item {
    display: flex;
    align-items: center;
    padding: 12px 15px;
    background: rgba(0, 0, 0, 0.2);
    border-radius: var(--border-radius);
    margin-bottom: 10px;
}

.account-item input {
    flex-grow: 1;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 10px 15px;
    border-radius: var(--border-radius);
    color: var(--light);
    font-size: 1rem;
}

.account-item input:focus {
    outline: none;
    border-color: var(--accent);
}

.account-item .remove-btn {
    margin-left: 10px;
    background: rgba(231, 76, 60, 0.2);
    color: var(--danger);
    border: none;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s;
}

.account-item .remove-btn:hover {
    background: rgba(231, 76, 60, 0.3);
}

.add-account {
    display: flex;
    gap: 10px;
    margin-top: 10px;
}

.add-account input {
    flex-grow: 1;
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 12px 15px;
    border-radius: var(--border-radius);
    color: var(--light);
    font-size: 1rem;
}

.add-account input:focus {
    outline: none;
    border-color: var(--accent);
}

.add-account button {
    background: rgba(39, 174, 96, 0.2);
    color: var(--success);
    border: none;
    padding: 12px 20px;
    border-radius: var(--border-radius);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s;
    font-size: 1rem;
    gap: 8px;
    white-space: nowrap;
}

.add-account button:hover {
    background: rgba(39, 174, 96, 0.3);
}

.save-btn {
    display: block;
    margin: 30px auto 0;
    padding: 12px 40px;
    background: var(--accent);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
}

.save-btn:hover {
    background: var(--accent-dark);
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes pulse {
    0% { opacity: 0.4; }
    50% { opacity: 1; }
    100% { opacity: 0.4; }
}

/* Loader */
.loader {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
}

.loader-circle {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    border: 5px solid rgba(255, 255, 255, 0.1);
    border-top: 5px solid var(--accent);
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Responsive Design */
@media (max-width: 992px) {
    .video-grid {
        grid-template-columns: 1fr;
        grid-template-rows: repeat(4, 1fr);
        height: auto;
        min-height: 80vh;
    }
    
    .video-container {
        height: 300px;
    }
}

@media (max-width: 768px) {
    :root {
        --sidebar-width: 240px;
    }
    
    .logo {
        font-size: 1.5rem;
    }
    
    .welcome-text {
        font-size: 1.6rem;
    }
    
    .page-title {
        font-size: 1.8rem;
    }
    
    .add-account {
        flex-direction: column;
    }
}

@media (max-width: 576px) {
    .stats-grid {
        grid-template-columns: 1fr;
    }
    
    .home-content, .connections-content {
        padding: 25px 15px;
    }
    
    .stat-card {
        padding: 20px 15px;
    }
    
    .stat-value {
        font-size: 2.3rem;
    }
    
    .social-platform {
        padding: 15px;
    }
    
    .platform-header i {
        width: 40px;
        height: 40px;
        font-size: 1.5rem;
    }
    
    .platform-header h3 {
        font-size: 1.3rem;
    }
    
    .page-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
    
    .refresh-btn {
        align-self: flex-start;
    }
} 
================================================= 
END OF FILE: styles_css.css 
================================================= 
===== END OF FILE CONTENTS ===== 
